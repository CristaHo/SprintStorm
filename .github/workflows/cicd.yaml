name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  ENVIRONMENT: staging
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  TEST_POSTGRES_URL: ${{ secrets.TEST_POSTGRES_URL }}

jobs:
  QA-checks:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install

      - name: Run unit tests
        run: poetry run coverage run --branch -m pytest

      - name: Run lint
        run: poetry run pylint src

      - name: Robot Framework
        uses: joonvena/robotframework-docker-action@v1.0
        with:
          browser: 'chrome'
          robot_threads: 2
          robot_tests_dir: tests

      - name: Generate coverage report
        run: poetry run coverage xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Check for errors in deploying
        run: poetry run gunicorn --chdir src wsgi:app --check-config

  deploy:
    needs: QA-checks
    name: Deploy app
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }} 
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
